# Nome do seu fluxo de trabalho
name: Build and Deploy Jekyll Site

# Define quando a Action deve rodar.
# Aqui, ela será acionada sempre que você der 'push' para a sua branch principal.
# Se o nome da sua branch principal for 'master', troque 'main' por 'master'.
on:
  push:
    branches:
      - main

jobs:
  # O trabalho de construir e publicar
  build_and_deploy:
    # O tipo de máquina que o trabalho vai rodar
    runs-on: ubuntu-latest

    steps:
      # Passo 1: Clona o seu repositório para dentro da Action, para que ela possa acessá-lo.
      - name: Checkout
        uses: actions/checkout@v4

      # Passo 2: Configura o ambiente Ruby e o Bundler (gerenciador de gems)
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'  # Versão do Ruby compatível com as gems
          bundler-cache: true  # Instala as gems e as mantém em cache para agilizar builds futuras

      # Passo 3: Constrói o site Jekyll
      # O comando 'bundle exec jekyll build' gera a versão final do site na pasta './_site'
      - name: Build Jekyll site
        run: bundle exec jekyll build
        env:
          JEKYLL_ENV: production

      # Passo 4: Publica o site no GitHub Pages
      # Esta action pega o conteúdo da pasta './_site' e o envia para a branch 'gh-pages'
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./_site
          # Se você usa um domínio customizado (ex: seunome.com.br), descomente a linha abaixo
          # cname: seu.dominio.com